.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_example_class_decoration.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_example_class_decoration.py:


==============================================================================
Example: decorating specified methods of a custom class with custom decorators
==============================================================================

This example shows how to decorate methods of a custom class with custom
decorators.




.. code-block:: python

    from pydeco import MethodsDecorator







Create custom decorators



.. code-block:: python



    class Decorator1(object):
        """Decorator 1."""

        def __init__(self, *args, **kwargs):
            pass

        def __call__(self, f):
            """Call function."""
            def wrapped_f(instance, *args, **kwargs):
                """Wrap input instance method with the herebelow code."""
                print('[Decorator 1] -> decorating...')
                return f(instance, *args, **kwargs)
            return wrapped_f


    class Decorator2(object):
        """Decorator 2."""

        def __init__(self, *args, **kwargs):
            pass

        def __call__(self, f):
            """Call function."""
            def wrapped_f(instance, *args, **kwargs):
                """Wrap input instance method with the herebelow code."""
                print('[Decorator 2] -> decorating...')
                return f(instance, *args, **kwargs)
            return wrapped_f







Create custom class



.. code-block:: python



    class MyClass():
        """Custom class."""

        def __init__(self, *args, **kwargs):
            pass

        def method_1(self, *args, **kwargs):
            print('Run method 1')

        def method_2(self, *args, **kwargs):
            print('Run method 2')

        def method_3(self, *args, **kwargs):
            print('Run method 3')







Test



.. code-block:: python


    # Without decorators
    # -----------------------------------------------------------------------------

    # instantiate the class
    instance = MyClass()

    # run methods
    instance.method_1()
    instance.method_2()
    instance.method_3()

    # With decorators for the respective methods
    # -----------------------------------------------------------------------------

    # decorate the class
    MyClass_deco = MethodsDecorator(
        mapping={
            Decorator1(): ['method_1', 'method_2'],
            Decorator2(): ['method_1', 'method_3']
        })(MyClass)

    # instantiate the class
    instance = MyClass_deco()

    # run methods
    instance.method_1()
    instance.method_2()
    instance.method_3()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Run method 1
    Run method 2
    Run method 3
    [Decorator 2] -> decorating...
    [Decorator 1] -> decorating...
    Run method 1
    [Decorator 1] -> decorating...
    Run method 2
    [Decorator 2] -> decorating...
    Run method 3


**Total running time of the script:** ( 0 minutes  0.001 seconds)


.. _sphx_glr_download_auto_examples_example_class_decoration.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_class_decoration.py <example_class_decoration.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_class_decoration.ipynb <example_class_decoration.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_

.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_example_timer.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_example_timer.py:


============================================================================
Example: decorating specified methods of a custom class with timer decorator
============================================================================

This example shows how to decorate methods of a custom class with a timer
decorator.




.. code-block:: python

    import time

    from pydeco import MethodsDecorator







Create timer decorator



.. code-block:: python



    class Timer(object):
        """Timer decorator."""

        def __init__(self, *args, **kwargs):
            pass

        def __call__(self, f):
            """Call function."""
            def wrapped_f(instance, *args, **kwargs):
                """Wrap input instance method with runtime measurement."""
                ts = time.time()
                result = f(instance, *args, **kwargs)
                te = time.time()
                print('[Log] runtime {!r} : {:2.2f} ms\n'.format(
                    f.__name__, (te - ts) * 1000))
                return result
            return wrapped_f








Create custom class and decorate some of its methods with :class:`Timer`



.. code-block:: python



    @MethodsDecorator(mapping={Timer(): ['method_1', 'method_2']})
    class MyClass():
        """Custom class."""

        def __init__(self, *args, **kwargs):
            pass

        def method_1(self, sleep=.01, **kwargs):
            print('Running \'method_1\' (sleep {:2.2f} ms)'.format(sleep * 1000))
            time.sleep(sleep)

        def method_2(self, sleep=.02, **kwargs):
            print('Running \'method_2\' (sleep {:2.2f} ms)'.format(sleep * 1000))
            time.sleep(sleep)

        def method_3(self, sleep=.03, **kwargs):
            print('Running \'method_3\' (sleep {:2.2f} ms)'.format(sleep * 1000))
            time.sleep(sleep)







Test



.. code-block:: python


    # instantiate the class
    instance = MyClass()

    # run methods
    instance.method_1()
    instance.method_2()
    instance.method_3()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running 'method_1' (sleep 10.00 ms)
    [Log] runtime 'method_1' : 10.20 ms

    Running 'method_2' (sleep 20.00 ms)
    [Log] runtime 'method_2' : 20.17 ms

    Running 'method_3' (sleep 30.00 ms)


**Total running time of the script:** ( 0 minutes  0.061 seconds)


.. _sphx_glr_download_auto_examples_example_timer.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_timer.py <example_timer.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_timer.ipynb <example_timer.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
